# fix https://gitlab.kitware.com/cmake/cmake/-/issues/24104
enable_language(OBJC) 

cmake_minimum_required(VERSION 3.5...3.28)

project(
  WebGPU_Tools
  VERSION 1.0.0
  DESCRIPTION "Utils and dependencies for WebGPU"
  LANGUAGES C CXX
)

# dependencies
add_subdirectory(deps/SDL EXCLUDE_FROM_ALL)
add_subdirectory(deps/glm-1.0.1)
add_subdirectory(deps/stb)
add_subdirectory(deps/webgpu)

add_library(webgpu_tools STATIC
  src/webgpu_utils/bind_group.cpp
  src/webgpu_utils/buffer.cpp
  src/webgpu_utils/init.cpp
  src/webgpu_utils/pipeline.cpp
  src/webgpu_utils/render_pass.cpp
  src/webgpu_utils/shader.cpp
  src/webgpu_utils/texture.cpp
  src/webgpu_utils/
  src/sdl3webgpu.mm
)

set_target_properties(webgpu_tools PROPERTIES
  CXX_STANDARD 23
  CXX_STANDARD_REQUIRED ON
)

target_include_directories(
  webgpu_tools PUBLIC
  ${PROJECT_SOURCE_DIR}/src
)

target_compile_definitions(webgpu_tools PUBLIC
  GLM_FORCE_SWIZZLE
  GLM_FORCE_DEPTH_ZERO_TO_ONE
  GLM_ENABLE_EXPERIMENTAL
)

target_link_libraries(webgpu_tools PUBLIC
  SDL3::SDL3
  glm
  stb
  # magic_enum::magic_enum
  webgpu
)

if(APPLE)
  target_link_libraries(webgpu_tools PUBLIC
    "-framework Cocoa" 
    "-framework IOKit"
    "-framework IOSurface"
    "-framework QuartzCore"
    "-framework Metal"
  )
endif()

target_include_directories(webgpu_tools PUBLIC
  ${PROJECT_SOURCE_DIR}/src
)

if(EMSCRIPTEN)
  target_link_options(webgpu_tools PUBLIC
    -gsource-map
    -sALLOW_MEMORY_GROWTH
    # -sASYNCIFY
    "-sJSPI"
    # -sUSE_WEBGPU
    # -fexceptions
  )

  # target_compile_options(webgpu_tools PUBLIC
  #   -fexceptions
  # )
endif()

target_compile_definitions(webgpu_tools PUBLIC
  GLM_FORCE_SWIZZLE
  GLM_FORCE_DEPTH_ZERO_TO_ONE
  GLM_ENABLE_EXPERIMENTAL
)
